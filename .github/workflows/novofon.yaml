name: Novofon Documentation Generator

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4 pyyaml lxml
        # Install dependencies from scripts if requirements.txt exists
        if [ -f scripts/requirements.txt ]; then
          pip install -r scripts/requirements.txt
        fi
        
    - name: Checkout Novofon documentation repository
      run: |
        git clone https://github.com/novofon/novofon.github.io.git temp-docs
        # Copy HTML documentation to temporary location
        mkdir -p temp-html
        cp -r temp-docs/call_api temp-html/
        cp -r temp-docs/data_api temp-html/
        rm -rf temp-docs
        
    - name: Generate OpenAPI specs for Data API
      run: |
        python scripts/enhanced_html_parser.py \
          --src temp-html/data_api \
          --dst openapi/data \
          --api-type data
          
    - name: Generate OpenAPI specs for Call API
      run: |
        python scripts/enhanced_html_parser.py \
          --src temp-html/call_api \
          --dst openapi/calls \
          --api-type calls
          
    - name: Convert HTML to Markdown for Data API
      run: |
        python scripts/html_to_markdown_converter.py \
          --input temp-html/data_api \
          --output docs/data \
          --api-type data
          
    - name: Convert HTML to Markdown for Call API
      run: |
        python scripts/html_to_markdown_converter.py \
          --input temp-html/call_api \
          --output docs/calls \
          --api-type calls
          
    - name: Clean up temporary files
      run: |
        rm -rf temp-html
        
    - name: Validate generated files
      run: |
        echo "Generated files:"
        find openapi docs -name "*.md" -o -name "*.yaml" | head -20
        echo "Total files:"
        find openapi docs -name "*.md" -o -name "*.yaml" | wc -l
        echo "Directory structure:"
        ls -la openapi/ || echo "openapi/ directory not found"
        ls -la docs/ || echo "docs/ directory not found"
        ls -la openapi/data/ || echo "openapi/data/ directory not found"
        ls -la openapi/calls/ || echo "openapi/calls/ directory not found"
        ls -la docs/data/ || echo "docs/data/ directory not found"
        ls -la docs/calls/ || echo "docs/calls/ directory not found"
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Files changed:"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No files changed"
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add openapi/ docs/
        git commit -m "Auto-generate Novofon API documentation
        
        - Generated OpenAPI specs for Data and Call APIs
        - Converted HTML documentation to Markdown
        - Updated documentation structure"
        git push
        
    - name: Create summary
      run: |
        echo "## Documentation Generation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- **OpenAPI Specs:** $(find openapi -name "*.yaml" 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
        echo "- **Markdown Docs:** $(find docs -name "*.md" 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### API Coverage:" >> $GITHUB_STEP_SUMMARY
        echo "- **Data API:** $(find openapi/data -name "*.yaml" 2>/dev/null | wc -l) endpoints" >> $GITHUB_STEP_SUMMARY
        echo "- **Call API:** $(find openapi/calls -name "*.yaml" 2>/dev/null | wc -l) endpoints" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### File Structure:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        if command -v tree >/dev/null 2>&1; then
          tree openapi docs -I 'assets|images|javascripts|stylesheets' | head -20 >> $GITHUB_STEP_SUMMARY
        else
          find openapi docs -type d | head -20 >> $GITHUB_STEP_SUMMARY
        fi
        echo '```' >> $GITHUB_STEP_SUMMARY