openapi: 3.0.0
info:
  title: Редактирование пользовательского столбца на основе метрики
  version: 1.0.0
  description: Редактирование пользовательского столбца на основе метрики
paths:
  /update.custom_metric_column:
    put:
      summary: Редактирование пользовательского столбца на основе метрики
      description: 'Редактирование пользовательского столбца на основе метрики


        **Доступ:** Агент, Клиент


        **Параметры запроса:** 14


        - `access_token` (string) (обязательный): Ключ сессии аутентификации


        - `user_id` (number) (опциональный): Уникальный идентификатор пользователя
        клиента агента от имени которого делается запрос Для получения списка пользователей
        клиента необходимо использовать метод ["get.customer_users"](../Partners.md#get_customer_user)


        - `id` (enum) (обязательный): Уникальная мнемоника метрики. Для получения
        списка метрик необходимо использовать метод ["get.metrics"](../get_metrics)


        - `name` (string) (обязательный): Название столбца


        - `description` (string) (опциональный): Описание столбца


        - `metric` (object) (опциональный): Метрика используемая в столбце.


        - `aggregate` (enum) (обязательный): Используемый агрегат для метрики. Для
        получения списка доступных агрегатов необходимо использовать метод ["get.metrics"](../get_metrics)


        - `has_percentage` (boolean) (опциональный): Используется ли расчет доли.
        Если не указать, будет подставлено false


        - `multichannel_model` (enum) (опциональный): Используемый способ мультиканального
        анализа. Для получения списка способов мультиканального анализа необходимо
        использовать метод ["get.metrics"](../get_metrics)


        - `filter` (object) (опциональный): Условия наложенные на рассчитываемую метрику.
        См. раздел ["Критерии фильтрации"](../index.md#_filters). Для получения списка
        доступных условия фильтрации см. раздел ["Получение списка доступных условий
        фильтрации для метрики"](../get_metric_filters)


        - `filters` (array) (обязательный): Выражение, может содержать в себе как
        простые фильтры, так и дерево фильтров


        - `field` (string) (опциональный): поле сущности к которой будет применяться
        фильтрация (список заранее определён для метода


        - `operator` (enum) (опциональный): Оператор фильтрации. Список всех операторов
        можно получить в разделе ["Операторы фильтрации"](../index.md#_filterOperators)


        - `value` (string) (опциональный): Значение для оператора фильтрации. Необязательное
        поле, если оно отсутствует, то считается пустота.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  example: '2.0'
                  description: JSON-RPC version
                id:
                  type: number
                  description: Request identifier
                method:
                  type: string
                  example: ''
                  description: Method name
                params:
                  type: object
                  properties:
                    access_token:
                      type: string
                      description: Ключ сессии аутентификации
                      example: example_string
                    user_id:
                      type: number
                      description: Уникальный идентификатор пользователя клиента агента
                        от имени которого делается запрос Для получения списка пользователей
                        клиента необходимо использовать метод ["get.customer_users"](../Partners.md#get_customer_user)
                      example: 123
                    id:
                      type: string
                      description: Уникальная мнемоника метрики. Для получения списка
                        метрик необходимо использовать метод ["get.metrics"](../get_metrics)
                    name:
                      type: string
                      description: Название столбца
                      example: example_string
                    description:
                      type: string
                      description: Описание столбца
                      example: example_string
                    metric:
                      type: object
                      description: Метрика используемая в столбце.
                    aggregate:
                      type: string
                      description: Используемый агрегат для метрики. Для получения
                        списка доступных агрегатов необходимо использовать метод ["get.metrics"](../get_metrics)
                    has_percentage:
                      type: boolean
                      description: Используется ли расчет доли. Если не указать, будет
                        подставлено false
                      example: true
                    multichannel_model:
                      type: string
                      description: Используемый способ мультиканального анализа. Для
                        получения списка способов мультиканального анализа необходимо
                        использовать метод ["get.metrics"](../get_metrics)
                    filter:
                      type: object
                      description: Условия наложенные на рассчитываемую метрику. См.
                        раздел ["Критерии фильтрации"](../index.md#_filters). Для
                        получения списка доступных условия фильтрации см. раздел ["Получение
                        списка доступных условий фильтрации для метрики"](../get_metric_filters)
                      enum:
                      - Допустимо использовать не более 2 уровней вложенности. Смотри
                        примеры ниже
                      example: Допустимо использовать не более 2 уровней вложенности.
                        Смотри примеры ниже
                    filters:
                      type: array
                      description: Выражение, может содержать в себе как простые фильтры,
                        так и дерево фильтров
                    field:
                      type: string
                      description: поле сущности к которой будет применяться фильтрация
                        (список заранее определён для метода
                      example: example_string
                    operator:
                      type: string
                      description: Оператор фильтрации. Список всех операторов можно
                        получить в разделе ["Операторы фильтрации"](../index.md#_filterOperators)
                    value:
                      type: string
                      description: Значение для оператора фильтрации. Необязательное
                        поле, если оно отсутствует, то считается пустота.
                      example: example_string
                  required:
                  - access_token
                  - id
                  - name
                  - aggregate
                  - filters
              required:
              - jsonrpc
              - id
              - method
              - params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    example: '2.0'
                    description: JSON-RPC version
                  id:
                    type: number
                    description: Request identifier
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                      metadata:
                        type: object
                        description: Response metadata
                    required:
                    - data
                    - metadata
                required:
                - jsonrpc
                - id
                - result
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: number
                  error:
                    type: object
                    properties:
                      code:
                        type: number
                      message:
                        type: string
                      data:
                        type: object
x-access: Агент, Клиент
x-errors:
  errors: []
  error_references:
  - text: '"Список ошибок для методов с глаголом update"'
    href: ../index.md#_changeErrors
