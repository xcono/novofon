openapi: 3.0.0
info:
  title: Создание задачи на выгрузку отчета файлом
  version: 1.0.0
  description: Создание задачи на выгрузку отчета файлом
paths:
  /create.report_generator_task:
    post:
      summary: Создание задачи на выгрузку отчета файлом
      description: 'Создание задачи на выгрузку отчета файлом


        **Доступ:** Агент, Клиент


        **Параметры запроса:** 14


        - `access_token` (string) (обязательный): Ключ сессии аутентификации


        - `user_id` (number) (опциональный): Уникальный идентификатор пользователя
        клиента агента от имени которого делается запрос


        - `report_type` (enum) (обязательный): Тип отчета пользователя. Для получения
        списка отчетов пользователей необходимо использовать метод "get.reports_list"


        - `report_format` (enum) (опциональный): Формат документа для выгрузки


        - `report_name` (string) (обязательный): Имя отчета пользователя выбранного
        для выгрузки


        - `date_from` (iso8601) (обязательный): Дата начала основной выборки(ограничение
        366 дней)


        - `date_till` (iso8601) (обязательный): Дата окончания основной выборки


        - `perspective_window` (number) (опциональный): Кол-во дней от сессии до обращения
        в которых происходит атрибутирование обращения к сессии.Является обязательным
        для `report_type` = `ad_analytics`


        - `dimensions` (array) (обязательный): Список мнемоник измерений, разделенных
        запятой. Доступный список измерений см.раздел "Получение вложенности измерений"
        . Порядок влияет на построение дерева.


        - `columns` (array) (обязательный): Список идентификаторов пользовательских
        столбцов, разделенных запятой. Доступный список столбцов см.раздел "Получение
        вложенности столбцов" . Порядок влияет на ответ.


        - `filters` (array) (обязательный): Выражение, может содержать в себе как
        простые фильтры, так и дерево фильтров.


        - `field` (string) (опциональный): Поле сущности к которой будет применяться
        фильтрация (список заранее определён для метода


        - `operator` (enum) (опциональный): Оператор фильтрации. Список всех операторов
        можно получить в разделе "Операторы фильтрации"


        - `value` (string) (опциональный): Значение для оператора фильтрации. Необязательное
        поле, если оно отсутствует, то считается пустота.


        **Параметры ответа:** 1


        - `id` (number): '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  example: '2.0'
                  description: JSON-RPC version
                id:
                  type: number
                  description: Request identifier
                method:
                  type: string
                  example: ''
                  description: Method name
                params:
                  type: object
                  properties:
                    access_token:
                      type: string
                      description: Ключ сессии аутентификации
                      example: example_string
                    user_id:
                      type: number
                      description: Уникальный идентификатор пользователя клиента агента
                        от имени которого делается запрос
                      example: 123
                    report_type:
                      type: string
                      description: Тип отчета пользователя. Для получения списка отчетов
                        пользователей необходимо использовать метод "get.reports_list"
                    report_format:
                      type: string
                      description: Формат документа для выгрузки
                      enum:
                      - csv
                      - xlsx
                      - google_sheets
                      example: csv
                    report_name:
                      type: string
                      description: Имя отчета пользователя выбранного для выгрузки
                      example: example_string
                    date_from:
                      type: string
                      description: Дата начала основной выборки(ограничение 366 дней)
                      enum:
                      - YYYY-MM-DD hh:mm:ss
                      example: YYYY-MM-DD hh:mm:ss
                    date_till:
                      type: string
                      description: Дата окончания основной выборки
                      enum:
                      - YYYY-MM-DD hh:mm:ss
                      example: YYYY-MM-DD hh:mm:ss
                    perspective_window:
                      type: number
                      description: Кол-во дней от сессии до обращения в которых происходит
                        атрибутирование обращения к сессии.Является обязательным для
                        `report_type` = `ad_analytics`
                      enum:
                      - Можно задать период от 1 до 180 дней от сессии до обращения
                      example: Можно задать период от 1 до 180 дней от сессии до обращения
                    dimensions:
                      type: array
                      description: Список мнемоник измерений, разделенных запятой.
                        Доступный список измерений см.раздел "Получение вложенности
                        измерений" . Порядок влияет на построение дерева.
                    columns:
                      type: array
                      description: Список идентификаторов пользовательских столбцов,
                        разделенных запятой. Доступный список столбцов см.раздел "Получение
                        вложенности столбцов" . Порядок влияет на ответ.
                    filters:
                      type: array
                      description: Выражение, может содержать в себе как простые фильтры,
                        так и дерево фильтров.
                    field:
                      type: string
                      description: Поле сущности к которой будет применяться фильтрация
                        (список заранее определён для метода
                      example: example_string
                    operator:
                      type: string
                      description: Оператор фильтрации. Список всех операторов можно
                        получить в разделе "Операторы фильтрации"
                    value:
                      type: string
                      description: Значение для оператора фильтрации. Необязательное
                        поле, если оно отсутствует, то считается пустота.
                      example: example_string
                  required:
                  - access_token
                  - report_type
                  - report_name
                  - date_from
                  - date_till
                  - dimensions
                  - columns
                  - filters
              required:
              - jsonrpc
              - id
              - method
              - params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    example: '2.0'
                    description: JSON-RPC version
                  id:
                    type: number
                    description: Request identifier
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: number
                            description: ''
                            x-filtering: да
                            x-sorting: да
                            example: 123
                        required: []
                      metadata:
                        type: object
                        description: Response metadata
                    required:
                    - data
                    - metadata
                required:
                - jsonrpc
                - id
                - result
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: number
                  error:
                    type: object
                    properties:
                      code:
                        type: number
                      message:
                        type: string
                      data:
                        type: object
x-access: Агент, Клиент
x-errors:
  errors: []
  error_references:
  - text: '"Список ошибок для методов с глаголом getobj"'
    href: ../../..#_getErrors
