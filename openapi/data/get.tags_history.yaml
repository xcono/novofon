openapi: 3.0.0
info:
  title: Получение истории простановки тега на обращения
  version: 1.0.0
  description: Получение истории простановки тега на обращения
paths:
  /get.tags_history:
    get:
      summary: Получение истории простановки тега на обращения
      description: "Получение истории простановки тега на обращения\n\n**Доступ:**\
        \ Агент, Клиент\n\n**Параметры запроса:** 12\n\n- `access_token` (string)\
        \ (обязательный): Ключ сессии аутентификации\n\n- `user_id` (number) (опциональный):\
        \ Уникальный идентификатор пользователя клиента агента от имени которого делается\
        \ запрос\n\n- `limit` (number) (опциональный): Количество возвращаемых записей.\
        \ См. раздел \"Постраничный вывод\"\n\n- `offset` (number) (опциональный):\
        \ Сдвиг, определяет с какого номера записи возвращать `\"limit\"` записей.\
        \ По умолчанию \"0\". См. раздел \"Постраничный вывод\"\n\n- `report_id` (number)\
        \ (обязательный): Уникальный идентификатор отчета пользователя. Для получения\
        \ списка отчетов пользователей необходимо использовать метод \"get.reports_list\"\
        \n\n- `date_from` (iso8601) (обязательный): Дата начала основной выборки(ограничение\
        \ 366 дней)\n\n- `date_till` (iso8601) (обязательный): Дата окончания основной\
        \ выборки\n\n- `fields` (array) (опциональный): Список идентификаторов пользовательских\
        \ столбцов, разделенных запятой. Доступный список столбцов см.раздел \"Получение\
        \ вложенности столбцов\" . Порядок влияет на ответ.\n\n- `filters` (array)\
        \ (обязательный): Выражение, может содержать в себе как простые фильтры, так\
        \ и дерево фильтров. Доступный список фильтров для отчета с их возможными\
        \ значениями см.раздел \"Получение списка возможных условий фильтрации для\
        \ отчета\" .\n\n- `field` (string) (опциональный): Поле сущности к которой\
        \ будет применяться фильтрация (список заранее определён для метода)\n\n-\
        \ `operator` (enum) (опциональный): Оператор фильтрации. Список всех операторов\
        \ можно получить в разделе \"Операторы фильтрации\"\n\n- `value` (string)\
        \ (опциональный): Значение для оператора фильтрации. Необязательное поле,\
        \ если оно отсутствует, то считается пустота.\n\n**Параметры ответа:** 14\n\
        \n- `tag_id` (numeric): да\n\n- `tag_name` (object): да\n\n- `id` (numeric):\
        \ \n\n- `name` (string): \n\n- `color` (string): \n\n- `tagging_date_time`\
        \ (iso8601): да\n\n- `communication_type` (object): да\n\n- `value` (string):\
        \ \n\n- `value_id` (string): \n\n- `communication_id` (string): да\n\n- `employee_full_name`\
        \ (string): \n\n- `employee_login` (string): \n\n- `tag_is_system` (object):\
        \ да\n\n- `tagging_is_auto` (object): да"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  example: '2.0'
                  description: JSON-RPC version
                id:
                  type: number
                  description: Request identifier
                method:
                  type: string
                  example: ''
                  description: Method name
                params:
                  type: object
                  properties:
                    access_token:
                      type: string
                      description: Ключ сессии аутентификации
                      example: example_string
                    user_id:
                      type: number
                      description: Уникальный идентификатор пользователя клиента агента
                        от имени которого делается запрос
                      example: 123
                    limit:
                      type: number
                      description: Количество возвращаемых записей. См. раздел "Постраничный
                        вывод"
                      example: 123
                    offset:
                      type: number
                      description: Сдвиг, определяет с какого номера записи возвращать
                        `"limit"` записей. По умолчанию "0". См. раздел "Постраничный
                        вывод"
                      example: 123
                    report_id:
                      type: number
                      description: Уникальный идентификатор отчета пользователя. Для
                        получения списка отчетов пользователей необходимо использовать
                        метод "get.reports_list"
                      example: 123
                    date_from:
                      type: string
                      description: Дата начала основной выборки(ограничение 366 дней)
                      enum:
                      - YYYY-MM-DD hh:mm:ss
                      example: YYYY-MM-DD hh:mm:ss
                    date_till:
                      type: string
                      description: Дата окончания основной выборки
                      enum:
                      - YYYY-MM-DD hh:mm:ss
                      example: YYYY-MM-DD hh:mm:ss
                    fields:
                      type: array
                      description: Список идентификаторов пользовательских столбцов,
                        разделенных запятой. Доступный список столбцов см.раздел "Получение
                        вложенности столбцов" . Порядок влияет на ответ.
                    filters:
                      type: array
                      description: Выражение, может содержать в себе как простые фильтры,
                        так и дерево фильтров. Доступный список фильтров для отчета
                        с их возможными значениями см.раздел "Получение списка возможных
                        условий фильтрации для отчета" .
                    field:
                      type: string
                      description: Поле сущности к которой будет применяться фильтрация
                        (список заранее определён для метода)
                      example: example_string
                    operator:
                      type: string
                      description: Оператор фильтрации. Список всех операторов можно
                        получить в разделе "Операторы фильтрации"
                    value:
                      type: string
                      description: Значение для оператора фильтрации. Необязательное
                        поле, если оно отсутствует, то считается пустота.
                      example: example_string
                  required:
                  - access_token
                  - report_id
                  - date_from
                  - date_till
                  - filters
              required:
              - jsonrpc
              - id
              - method
              - params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    example: '2.0'
                    description: JSON-RPC version
                  id:
                    type: number
                    description: Request identifier
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tag_id:
                            type: string
                            description: да
                            x-filtering: да
                            x-sorting: да
                          tag_name:
                            type: object
                            description: да
                            x-filtering: да
                            x-sorting: да
                          id:
                            type: string
                            description: ''
                          name:
                            type: string
                            description: ''
                            example: example_string
                          color:
                            type: string
                            description: ''
                            example: example_string
                          tagging_date_time:
                            type: string
                            description: да
                            enum:
                            - YYYY-MM-DD hh:mm:ss
                            example: YYYY-MM-DD hh:mm:ss
                            x-filtering: да
                            x-sorting: да
                          communication_type:
                            type: object
                            description: да
                            x-filtering: да
                            x-sorting: да
                          value:
                            type: string
                            description: ''
                            example: example_string
                          value_id:
                            type: string
                            description: ''
                            example: example_string
                          communication_id:
                            type: string
                            description: да
                            x-filtering: да
                            x-sorting: да
                            example: example_string
                          employee_full_name:
                            type: string
                            description: ''
                            example: example_string
                          employee_login:
                            type: string
                            description: ''
                            example: example_string
                          tag_is_system:
                            type: object
                            description: да
                            x-filtering: да
                            x-sorting: да
                          tagging_is_auto:
                            type: object
                            description: да
                            x-filtering: да
                            x-sorting: да
                        required: []
                      metadata:
                        type: object
                        description: Response metadata
                    required:
                    - data
                    - metadata
                required:
                - jsonrpc
                - id
                - result
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: number
                  error:
                    type: object
                    properties:
                      code:
                        type: number
                      message:
                        type: string
                      data:
                        type: object
x-access: Агент, Клиент
x-errors:
  errors: []
  error_references:
  - text: '"Список ошибок для методов с глаголом get"'
    href: ../../..#_getErrors
